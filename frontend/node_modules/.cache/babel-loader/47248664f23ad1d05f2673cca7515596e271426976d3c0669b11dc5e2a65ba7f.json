{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Harsh\\\\sql-json\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DEFAULTS = {\n  db_type: 'mysql',\n  host: 'localhost',\n  port: 3306,\n  user: 'root',\n  password: '',\n  database: ''\n};\nfunction App() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [schema, setSchema] = useState(null);\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n  const [dbConfig, setDbConfig] = useState(null);\n  const [dbForm, setDbForm] = useState(DEFAULTS);\n  const [dbError, setDbError] = useState('');\n  const chatBoxRef = useRef(null);\n  useEffect(() => {\n    if (dbConfig) {\n      axios.post('http://localhost:8000/schema', {\n        db_config: dbConfig\n      }).then(res => {\n        if (res.data.error) setDbError(res.data.error);else {\n          setSchema(res.data);\n          setDbError('');\n        }\n      }).catch(() => setDbError('Could not connect to database.'));\n    }\n  }, [dbConfig]);\n  useEffect(() => {\n    if (chatBoxRef.current) {\n      chatBoxRef.current.scrollTop = chatBoxRef.current.scrollHeight;\n    }\n  }, [messages, loading]);\n  const handleSend = async e => {\n    e.preventDefault();\n    if (!query.trim()) return;\n    setMessages(msgs => [...msgs, {\n      type: 'user',\n      text: query\n    }]);\n    setLoading(true);\n    try {\n      const res = await axios.post('http://localhost:8000/chat', {\n        query,\n        db_config: dbConfig\n      });\n      setMessages(msgs => [...msgs, {\n        type: 'bot',\n        text: res.data.response\n      }]);\n    } catch (err) {\n      setMessages(msgs => [...msgs, {\n        type: 'bot',\n        text: 'Error: Could not get response from backend.'\n      }]);\n    }\n    setQuery('');\n    setLoading(false);\n  };\n  const handleDbFormChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setDbForm(f => ({\n      ...f,\n      [name]: name === 'port' ? Number(value) : value\n    }));\n  };\n  const handleDbConnect = async e => {\n    e.preventDefault();\n    setDbError('');\n    setSchema(null);\n    setDbConfig(null);\n    try {\n      const res = await axios.post('http://localhost:8000/schema', {\n        db_config: dbForm\n      });\n      if (res.data.error) {\n        setDbError(res.data.error);\n      } else {\n        setSchema(res.data);\n        setDbConfig(dbForm);\n        setDbError('');\n      }\n    } catch {\n      setDbError('Could not connect to database.');\n    }\n  };\n  if (!dbConfig || !schema) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"db-form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"db-form\",\n        onSubmit: handleDbConnect,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Connect to Database\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"DB Type\", /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"db_type\",\n            value: dbForm.db_type,\n            onChange: handleDbFormChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"mysql\",\n              children: \"MySQL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"postgresql\",\n              children: \"PostgreSQL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"sqlite\",\n              children: \"SQLite\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"mssql\",\n              children: \"MSSQL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), dbForm.db_type !== 'sqlite' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Host\", /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"host\",\n              value: dbForm.host,\n              onChange: handleDbFormChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Port\", /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"port\",\n              type: \"number\",\n              value: dbForm.port,\n              onChange: handleDbFormChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"User\", /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"user\",\n              value: dbForm.user,\n              onChange: handleDbFormChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"password\",\n              type: \"password\",\n              value: dbForm.password,\n              onChange: handleDbFormChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Database\", /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"database\",\n              value: dbForm.database,\n              onChange: handleDbFormChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true), dbForm.db_type === 'sqlite' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Database File Path\", /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"database\",\n              value: dbForm.database,\n              onChange: handleDbFormChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)\n        }, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Connect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), dbError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"db-error\",\n          children: dbError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"sidebar-toggle\",\n      onClick: () => setSidebarOpen(v => !v),\n      children: sidebarOpen ? '⏴' : '⏵'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `sidebar ${sidebarOpen ? 'open' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Database Schema\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), schema ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"schema-list\",\n        children: Object.entries(schema).map(([table, columns]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"schema-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"schema-table-name\",\n            children: table\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"schema-columns\",\n            children: columns.map(col => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: col\n            }, col, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 17\n          }, this)]\n        }, table, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"schema-loading\",\n        children: \"Loading schema...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"SQL-JSON Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      ref: chatBoxRef,\n      children: [messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.type}`,\n        children: [msg.type === 'bot' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avatar bot\",\n          title: \"Bot\",\n          children: \"\\uD83E\\uDD16\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `bubble ${msg.type}`,\n          children: typeof msg.text === 'string' ? msg.text : /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: JSON.stringify(msg.text, null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 58\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), msg.type === 'user' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avatar user\",\n          title: \"You\",\n          children: \"U\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 15\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message bot\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avatar bot\",\n          title: \"Bot\",\n          children: \"\\uD83E\\uDD16\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bubble bot\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"input-form\",\n      onSubmit: handleSend,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        placeholder: \"Ask a question about your data...\",\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading || !query.trim(),\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"si4gqkCYAGqzeCxcQYpAsF6SXeg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","DEFAULTS","db_type","host","port","user","password","database","App","_s","query","setQuery","messages","setMessages","loading","setLoading","schema","setSchema","sidebarOpen","setSidebarOpen","dbConfig","setDbConfig","dbForm","setDbForm","dbError","setDbError","chatBoxRef","post","db_config","then","res","data","error","catch","current","scrollTop","scrollHeight","handleSend","e","preventDefault","trim","msgs","type","text","response","err","handleDbFormChange","name","value","target","f","Number","handleDbConnect","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","onChange","required","onClick","v","Object","entries","map","table","columns","col","ref","msg","idx","title","JSON","stringify","placeholder","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Harsh/sql-json/frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\nconst DEFAULTS = {\r\n  db_type: 'mysql',\r\n  host: 'localhost',\r\n  port: 3306,\r\n  user: 'root',\r\n  password: '',\r\n  database: '',\r\n};\r\n\r\nfunction App() {\r\n  const [query, setQuery] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [schema, setSchema] = useState(null);\r\n  const [sidebarOpen, setSidebarOpen] = useState(false);\r\n  const [dbConfig, setDbConfig] = useState(null);\r\n  const [dbForm, setDbForm] = useState(DEFAULTS);\r\n  const [dbError, setDbError] = useState('');\r\n  const chatBoxRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (dbConfig) {\r\n      axios.post('http://localhost:8000/schema', { db_config: dbConfig })\r\n        .then(res => {\r\n          if (res.data.error) setDbError(res.data.error);\r\n          else {\r\n            setSchema(res.data);\r\n            setDbError('');\r\n          }\r\n        })\r\n        .catch(() => setDbError('Could not connect to database.'));\r\n    }\r\n  }, [dbConfig]);\r\n\r\n  useEffect(() => {\r\n    if (chatBoxRef.current) {\r\n      chatBoxRef.current.scrollTop = chatBoxRef.current.scrollHeight;\r\n    }\r\n  }, [messages, loading]);\r\n\r\n  const handleSend = async (e) => {\r\n    e.preventDefault();\r\n    if (!query.trim()) return;\r\n    setMessages((msgs) => [...msgs, { type: 'user', text: query }]);\r\n    setLoading(true);\r\n    try {\r\n      const res = await axios.post('http://localhost:8000/chat', {\r\n        query,\r\n        db_config: dbConfig\r\n      });\r\n      setMessages((msgs) => [\r\n        ...msgs,\r\n        { type: 'bot', text: res.data.response }\r\n      ]);\r\n    } catch (err) {\r\n      setMessages((msgs) => [\r\n        ...msgs,\r\n        { type: 'bot', text: 'Error: Could not get response from backend.' }\r\n      ]);\r\n    }\r\n    setQuery('');\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleDbFormChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setDbForm(f => ({ ...f, [name]: name === 'port' ? Number(value) : value }));\r\n  };\r\n\r\n  const handleDbConnect = async (e) => {\r\n    e.preventDefault();\r\n    setDbError('');\r\n    setSchema(null);\r\n    setDbConfig(null);\r\n    try {\r\n      const res = await axios.post('http://localhost:8000/schema', { db_config: dbForm });\r\n      if (res.data.error) {\r\n        setDbError(res.data.error);\r\n      } else {\r\n        setSchema(res.data);\r\n        setDbConfig(dbForm);\r\n        setDbError('');\r\n      }\r\n    } catch {\r\n      setDbError('Could not connect to database.');\r\n    }\r\n  };\r\n\r\n  if (!dbConfig || !schema) {\r\n    return (\r\n      <div className=\"db-form-container\">\r\n        <form className=\"db-form\" onSubmit={handleDbConnect}>\r\n          <h2>Connect to Database</h2>\r\n          <label>\r\n            DB Type\r\n            <select name=\"db_type\" value={dbForm.db_type} onChange={handleDbFormChange}>\r\n              <option value=\"mysql\">MySQL</option>\r\n              <option value=\"postgresql\">PostgreSQL</option>\r\n              <option value=\"sqlite\">SQLite</option>\r\n              <option value=\"mssql\">MSSQL</option>\r\n            </select>\r\n          </label>\r\n          {dbForm.db_type !== 'sqlite' && <>\r\n            <label>\r\n              Host\r\n              <input name=\"host\" value={dbForm.host} onChange={handleDbFormChange} required />\r\n            </label>\r\n            <label>\r\n              Port\r\n              <input name=\"port\" type=\"number\" value={dbForm.port} onChange={handleDbFormChange} required />\r\n            </label>\r\n            <label>\r\n              User\r\n              <input name=\"user\" value={dbForm.user} onChange={handleDbFormChange} required />\r\n            </label>\r\n            <label>\r\n              Password\r\n              <input name=\"password\" type=\"password\" value={dbForm.password} onChange={handleDbFormChange} />\r\n            </label>\r\n            <label>\r\n              Database\r\n              <input name=\"database\" value={dbForm.database} onChange={handleDbFormChange} required />\r\n            </label>\r\n          </>}\r\n          {dbForm.db_type === 'sqlite' && <>\r\n            <label>\r\n              Database File Path\r\n              <input name=\"database\" value={dbForm.database} onChange={handleDbFormChange} required />\r\n            </label>\r\n          </>}\r\n          <button type=\"submit\">Connect</button>\r\n          {dbError && <div className=\"db-error\">{dbError}</div>}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <button className=\"sidebar-toggle\" onClick={() => setSidebarOpen(v => !v)}>\r\n        {sidebarOpen ? '⏴' : '⏵'}\r\n      </button>\r\n      <div className={`sidebar ${sidebarOpen ? 'open' : ''}`}>\r\n        <h2>Database Schema</h2>\r\n        {schema ? (\r\n          <div className=\"schema-list\">\r\n            {Object.entries(schema).map(([table, columns]) => (\r\n              <div key={table} className=\"schema-table\">\r\n                <div className=\"schema-table-name\">{table}</div>\r\n                <ul className=\"schema-columns\">\r\n                  {columns.map(col => (\r\n                    <li key={col}>{col}</li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <div className=\"schema-loading\">Loading schema...</div>\r\n        )}\r\n      </div>\r\n      <h1>SQL-JSON Chat</h1>\r\n      <div className=\"chat-box\" ref={chatBoxRef}>\r\n        {messages.map((msg, idx) => (\r\n          <div key={idx} className={`message ${msg.type}`}>\r\n            {msg.type === 'bot' && (\r\n              <div className=\"avatar bot\" title=\"Bot\">🤖</div>\r\n            )}\r\n            <div className={`bubble ${msg.type}`}>\r\n              {typeof msg.text === 'string' ? msg.text : <pre>{JSON.stringify(msg.text, null, 2)}</pre>}\r\n            </div>\r\n            {msg.type === 'user' && (\r\n              <div className=\"avatar user\" title=\"You\">U</div>\r\n            )}\r\n          </div>\r\n        ))}\r\n        {loading && (\r\n          <div className=\"message bot\">\r\n            <div className=\"avatar bot\" title=\"Bot\">🤖</div>\r\n            <div className=\"bubble bot\">Loading...</div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <form className=\"input-form\" onSubmit={handleSend}>\r\n        <input\r\n          type=\"text\"\r\n          value={query}\r\n          onChange={e => setQuery(e.target.value)}\r\n          placeholder=\"Ask a question about your data...\"\r\n          disabled={loading}\r\n        />\r\n        <button type=\"submit\" disabled={loading || !query.trim()}>Send</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}